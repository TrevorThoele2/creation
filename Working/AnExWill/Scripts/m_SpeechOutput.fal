
load m_FrameTimer

// Output: string
// Speed: float
// UseSpeed: float
// Reset: bool. If true, resets the speech handler's string
// EndingWait: double. Seconds
class SpeechOutput(output, speed, useSpeed, reset, endingWait)
	function __call()
		// Calculates the character delta every frame
		timeTaken = 0.0
		charCount = 0
		length = len(self._output)
		
		timer = FrameTimer(self._endingWait)
		timer.Start()
		
		loop
			useElapsed = (atmos_IsActionActive(atmos_Action.Use)) ? self._useSpeed * timer.GetElapsed() : timer.GetElapsed()
			timeTaken += useElapsed
			
			numberOfCharacters = floor(timeTaken / (1 / self._speed))
			
			// If there are actually characters to output, then do so
			if(numberOfCharacters > 0)
				timeTaken = 0
				timer.Start()
				if charCount + numberOfCharacters > length: numberOfCharacters = length - charCount
			
				// Output the characters
				atmos_AppendSpeechCharacters(self._output[charCount : charCount + numberOfCharacters])
				// Increment the char count
				charCount += numberOfCharacters
				
				// If has finished, then break out of the loop and start the timer
				if(charCount == length)
					timer.Start()
					break
				end
			end
			
			atmos_Suspend()
		end
		
		while(not timer.HasReachedGoal())
			atmos_Suspend()
		end
		
		if self._reset == true: atmos_ClearSpeechCharacters()
	end
	
	_output = output
	_speed = speed
	_useSpeed = useSpeed
	_reset = reset
	_endingWait = endingWait
end

export SpeechOutput